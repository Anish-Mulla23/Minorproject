{"ast":null,"code":"var _jsxFileName = \"E:\\\\10000\\\\10002\\\\frontend\\\\src\\\\pages\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch cart on component mount\n  useEffect(() => {\n    fetchCart();\n  }, []);\n  const fetchCart = async () => {\n    try {\n      setLoading(true);\n      const {\n        data\n      } = await axios.get(\"/api/cart\");\n      setCart(data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to fetch cart\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addToCart = async productId => {\n    try {\n      setLoading(true);\n      await axios.post(\"/api/cart/add\", {\n        productId\n      });\n      await fetchCart(); // Refresh cart after addition\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to add to cart\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const removeFromCart = async productId => {\n    try {\n      setLoading(true);\n      await axios.post(\"/api/cart/remove\", {\n        productId\n      });\n      await fetchCart(); // Refresh cart after removal\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Failed to remove from cart\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateQuantity = async (productId, quantity) => {\n    try {\n      setLoading(true);\n      await axios.post(\"/api/cart/update-quantity\", {\n        productId,\n        quantity\n      });\n      await fetchCart(); // Refresh cart after update\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || \"Failed to update quantity\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const clearError = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      loading,\n      error,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"YyzQs54Mh66DKRLSq/ilkiB5mAo=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","axios","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","loading","setLoading","error","setError","fetchCart","data","get","err","_err$response","_err$response$data","response","message","addToCart","productId","post","_err$response2","_err$response2$data","removeFromCart","_err$response3","_err$response3$data","updateQuantity","quantity","_err$response4","_err$response4$data","clearError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["E:/10000/10002/frontend/src/pages/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch cart on component mount\r\n  useEffect(() => {\r\n    fetchCart();\r\n  }, []);\r\n\r\n  const fetchCart = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await axios.get(\"/api/cart\");\r\n      setCart(data);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Failed to fetch cart\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const addToCart = async (productId) => {\r\n    try {\r\n      setLoading(true);\r\n      await axios.post(\"/api/cart/add\", { productId });\r\n      await fetchCart(); // Refresh cart after addition\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Failed to add to cart\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = async (productId) => {\r\n    try {\r\n      setLoading(true);\r\n      await axios.post(\"/api/cart/remove\", { productId });\r\n      await fetchCart(); // Refresh cart after removal\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Failed to remove from cart\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateQuantity = async (productId, quantity) => {\r\n    try {\r\n      setLoading(true);\r\n      await axios.post(\"/api/cart/update-quantity\", { productId, quantity });\r\n      await fetchCart(); // Refresh cart after update\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Failed to update quantity\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        loading,\r\n        error,\r\n        addToCart,\r\n        removeFromCart,\r\n        updateQuantity,\r\n        clearError,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}