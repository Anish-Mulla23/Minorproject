{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nconst VerifyAdmin = ({\n  setIsAdmin,\n  setError,\n  setLoading\n}) => {\n  _s();\n  const history = useHistory();\n  useEffect(() => {\n    const verifyAdminStatus = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setError(\"Please login to access this page\");\n        history.push(\"/login\");\n        return;\n      }\n      try {\n        const {\n          data\n        } = await axios.get(\"http://localhost:5000/api/users/profile\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (data.isAdmin) {\n          setIsAdmin(true);\n        } else {\n          // Check if user has already been prompted\n          const alreadyPrompted = localStorage.getItem(\"adminPrompted\");\n          if (!alreadyPrompted) {\n            const confirmAccess = window.confirm(\"You are not an admin. Do you want to request admin access?\");\n            if (confirmAccess) {\n              try {\n                // Call API to request admin access\n                await axios.put(`http://localhost:5000/api/users/${data._id}/request-admin`, {}, {\n                  headers: {\n                    Authorization: `Bearer ${token}`\n                  }\n                });\n                setError(\"Admin access requested. Please wait for approval.\");\n                localStorage.setItem(\"adminPrompted\", \"true\");\n              } catch (err) {\n                setError(\"Failed to request admin access. Please contact support.\");\n              }\n            }\n            history.push(\"/\");\n          } else {\n            setError(\"Admin access already requested. Please wait for approval.\");\n          }\n        }\n      } catch (err) {\n        var _err$response, _err$response$data;\n        const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to verify admin status\";\n        setError(errorMessage);\n        console.error(\"Admin verification error:\", err);\n        history.push(\"/login\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    verifyAdminStatus();\n  }, [setIsAdmin, setError, setLoading, history]);\n  return null;\n};\n_s(VerifyAdmin, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n_c = VerifyAdmin;\nexport default VerifyAdmin;\nvar _c;\n$RefreshReg$(_c, \"VerifyAdmin\");","map":{"version":3,"names":["useState","useEffect","axios","useHistory","VerifyAdmin","setIsAdmin","setError","setLoading","_s","history","verifyAdminStatus","token","localStorage","getItem","push","data","get","headers","Authorization","isAdmin","alreadyPrompted","confirmAccess","window","confirm","put","_id","setItem","err","_err$response","_err$response$data","errorMessage","response","message","console","error","_c","$RefreshReg$"],"sources":["E:/10000/10002/frontend/src/VerifyAdmin.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst VerifyAdmin = ({ setIsAdmin, setError, setLoading }) => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const verifyAdminStatus = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        setError(\"Please login to access this page\");\r\n        history.push(\"/login\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const { data } = await axios.get(\r\n          \"http://localhost:5000/api/users/profile\",\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        if (data.isAdmin) {\r\n          setIsAdmin(true);\r\n        } else {\r\n          // Check if user has already been prompted\r\n          const alreadyPrompted = localStorage.getItem(\"adminPrompted\");\r\n\r\n          if (!alreadyPrompted) {\r\n            const confirmAccess = window.confirm(\r\n              \"You are not an admin. Do you want to request admin access?\"\r\n            );\r\n\r\n            if (confirmAccess) {\r\n              try {\r\n                // Call API to request admin access\r\n                await axios.put(\r\n                  `http://localhost:5000/api/users/${data._id}/request-admin`,\r\n                  {},\r\n                  { headers: { Authorization: `Bearer ${token}` } }\r\n                );\r\n\r\n                setError(\"Admin access requested. Please wait for approval.\");\r\n                localStorage.setItem(\"adminPrompted\", \"true\");\r\n              } catch (err) {\r\n                setError(\r\n                  \"Failed to request admin access. Please contact support.\"\r\n                );\r\n              }\r\n            }\r\n\r\n            history.push(\"/\");\r\n          } else {\r\n            setError(\r\n              \"Admin access already requested. Please wait for approval.\"\r\n            );\r\n          }\r\n        }\r\n      } catch (err) {\r\n        const errorMessage =\r\n          err.response?.data?.message || \"Failed to verify admin status\";\r\n        setError(errorMessage);\r\n        console.error(\"Admin verification error:\", err);\r\n        history.push(\"/login\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    verifyAdminStatus();\r\n  }, [setIsAdmin, setError, setLoading, history]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default VerifyAdmin;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,UAAU;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAMC,OAAO,GAAGN,UAAU,CAAC,CAAC;EAE5BF,SAAS,CAAC,MAAM;IACd,MAAMS,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVL,QAAQ,CAAC,kCAAkC,CAAC;QAC5CG,OAAO,CAACK,IAAI,CAAC,QAAQ,CAAC;QACtB;MACF;MAEA,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAC9B,yCAAyC,EACzC;UACEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG;QAC9C,CACF,CAAC;QAED,IAAII,IAAI,CAACI,OAAO,EAAE;UAChBd,UAAU,CAAC,IAAI,CAAC;QAClB,CAAC,MAAM;UACL;UACA,MAAMe,eAAe,GAAGR,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;UAE7D,IAAI,CAACO,eAAe,EAAE;YACpB,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAO,CAClC,4DACF,CAAC;YAED,IAAIF,aAAa,EAAE;cACjB,IAAI;gBACF;gBACA,MAAMnB,KAAK,CAACsB,GAAG,CACb,mCAAmCT,IAAI,CAACU,GAAG,gBAAgB,EAC3D,CAAC,CAAC,EACF;kBAAER,OAAO,EAAE;oBAAEC,aAAa,EAAE,UAAUP,KAAK;kBAAG;gBAAE,CAClD,CAAC;gBAEDL,QAAQ,CAAC,mDAAmD,CAAC;gBAC7DM,YAAY,CAACc,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC;cAC/C,CAAC,CAAC,OAAOC,GAAG,EAAE;gBACZrB,QAAQ,CACN,yDACF,CAAC;cACH;YACF;YAEAG,OAAO,CAACK,IAAI,CAAC,GAAG,CAAC;UACnB,CAAC,MAAM;YACLR,QAAQ,CACN,2DACF,CAAC;UACH;QACF;MACF,CAAC,CAAC,OAAOqB,GAAG,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA;QACZ,MAAMC,YAAY,GAChB,EAAAF,aAAA,GAAAD,GAAG,CAACI,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcb,IAAI,cAAAc,kBAAA,uBAAlBA,kBAAA,CAAoBG,OAAO,KAAI,+BAA+B;QAChE1B,QAAQ,CAACwB,YAAY,CAAC;QACtBG,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEP,GAAG,CAAC;QAC/ClB,OAAO,CAACK,IAAI,CAAC,QAAQ,CAAC;MACxB,CAAC,SAAS;QACRP,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACL,UAAU,EAAEC,QAAQ,EAAEC,UAAU,EAAEE,OAAO,CAAC,CAAC;EAE/C,OAAO,IAAI;AACb,CAAC;AAACD,EAAA,CAvEIJ,WAAW;EAAA,QACCD,UAAU;AAAA;AAAAgC,EAAA,GADtB/B,WAAW;AAyEjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}