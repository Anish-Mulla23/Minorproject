{"ast":null,"code":"var _jsxFileName = \"E:\\\\10000\\\\10002\\\\frontend\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  // Clear messages after timeout\n  const clearMessages = () => {\n    setTimeout(() => {\n      setError(null);\n      setSuccess(null);\n    }, 5000);\n  };\n\n  // Register user\n  const register = async userData => {\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    try {\n      const response = await axios.post(\"/api/users/register\", userData);\n      if (response.data && response.data.token) {\n        localStorage.setItem(\"token\", response.data.token);\n        setUser(response.data.user);\n        setSuccess(\"Registration successful! Redirecting...\");\n        clearMessages();\n        return true;\n      }\n    } catch (err) {\n      let errorMessage = \"Error registering user\";\n\n      // Handle different types of errors\n      if (err.response) {\n        // Server responded with error status\n        errorMessage = err.response.data.message || err.response.data.error || \"Registration failed. Please try again.\";\n\n        // Handle specific validation errors\n        if (err.response.data.errors) {\n          errorMessage = Object.values(err.response.data.errors).map(err => err.message).join(\". \");\n        }\n      } else if (err.request) {\n        // Request was made but no response\n        errorMessage = \"No response from server. Please check your connection.\";\n      } else {\n        // Other errors\n        errorMessage = err.message || \"An unexpected error occurred.\";\n      }\n      setError(errorMessage);\n      console.error(\"Registration error:\", err);\n      clearMessages();\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async credentials => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(\"/api/users/login\", credentials);\n      if (response.data && response.data.token) {\n        localStorage.setItem(\"token\", response.data.token);\n        setUser(response.data.user);\n        return true;\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Invalid email or password\";\n      setError(errorMessage);\n      console.error(\"Login error:\", err);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n  };\n\n  // Check if user is authenticated\n  const checkAuth = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return false;\n    try {\n      const response = await axios.get(\"/api/users/me\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data) {\n        setUser(response.data);\n        return true;\n      }\n    } catch (err) {\n      console.error(\"Auth check error:\", err);\n      logout();\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      success,\n      register,\n      login,\n      logout,\n      checkAuth,\n      setError,\n      setSuccess\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"HL/bejge4TzGApSlxGZOZ23rIuI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","success","setSuccess","clearMessages","setTimeout","register","userData","response","post","data","token","localStorage","setItem","err","errorMessage","message","errors","Object","values","map","join","request","console","login","credentials","_err$response","_err$response$data","logout","removeItem","checkAuth","getItem","get","headers","Authorization","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/10000/10002/frontend/src/AuthContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n\r\n  // Clear messages after timeout\r\n  const clearMessages = () => {\r\n    setTimeout(() => {\r\n      setError(null);\r\n      setSuccess(null);\r\n    }, 5000);\r\n  };\r\n\r\n  // Register user\r\n  const register = async (userData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setSuccess(null);\r\n\r\n    try {\r\n      const response = await axios.post(\"/api/users/register\", userData);\r\n\r\n      if (response.data && response.data.token) {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        setUser(response.data.user);\r\n        setSuccess(\"Registration successful! Redirecting...\");\r\n        clearMessages();\r\n        return true;\r\n      }\r\n    } catch (err) {\r\n      let errorMessage = \"Error registering user\";\r\n\r\n      // Handle different types of errors\r\n      if (err.response) {\r\n        // Server responded with error status\r\n        errorMessage =\r\n          err.response.data.message ||\r\n          err.response.data.error ||\r\n          \"Registration failed. Please try again.\";\r\n\r\n        // Handle specific validation errors\r\n        if (err.response.data.errors) {\r\n          errorMessage = Object.values(err.response.data.errors)\r\n            .map((err) => err.message)\r\n            .join(\". \");\r\n        }\r\n      } else if (err.request) {\r\n        // Request was made but no response\r\n        errorMessage = \"No response from server. Please check your connection.\";\r\n      } else {\r\n        // Other errors\r\n        errorMessage = err.message || \"An unexpected error occurred.\";\r\n      }\r\n\r\n      setError(errorMessage);\r\n      console.error(\"Registration error:\", err);\r\n      clearMessages();\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Login user\r\n  const login = async (credentials) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await axios.post(\"/api/users/login\", credentials);\r\n\r\n      if (response.data && response.data.token) {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        setUser(response.data.user);\r\n        return true;\r\n      }\r\n    } catch (err) {\r\n      const errorMessage =\r\n        err.response?.data?.message || \"Invalid email or password\";\r\n      setError(errorMessage);\r\n      console.error(\"Login error:\", err);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout user\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setUser(null);\r\n  };\r\n\r\n  // Check if user is authenticated\r\n  const checkAuth = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) return false;\r\n\r\n    try {\r\n      const response = await axios.get(\"/api/users/me\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      if (response.data) {\r\n        setUser(response.data);\r\n        return true;\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Auth check error:\", err);\r\n      logout();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        error,\r\n        success,\r\n        register,\r\n        login,\r\n        logout,\r\n        checkAuth,\r\n        setError,\r\n        setSuccess,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}