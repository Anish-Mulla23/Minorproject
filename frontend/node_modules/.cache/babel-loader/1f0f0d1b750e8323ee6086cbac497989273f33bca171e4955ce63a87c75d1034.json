{"ast":null,"code":"var _jsxFileName = \"E:\\\\10000\\\\10002\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const fetchCart = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(\"/api/cart\", {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setCart(data);\n    } catch (err) {\n      setError(\"Failed to fetch cart\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchCart();\n  }, []);\n  const updateCartItem = async (productId, quantity) => {\n    try {\n      const {\n        data\n      } = await axios.post(\"/api/cart/update\", {\n        productId,\n        quantity\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setCart(prev => prev.map(item => item.product._id === productId ? {\n        ...item,\n        quantity\n      } : item));\n    } catch {\n      setError(\"Failed to update quantity\");\n    }\n  };\n  const removeFromCart = async productId => {\n    try {\n      await axios.post(\"/api/cart/remove\", {\n        productId\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setCart(prev => prev.filter(item => item.product._id !== productId));\n    } catch {\n      setError(\"Failed to remove item\");\n    }\n  };\n  const clearError = () => setError(\"\");\n  const cartTotal = cart.reduce((total, item) => total + item.product.price * item.quantity, 0).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      cartTotal,\n      loading,\n      error,\n      removeFromCart,\n      updateCartItem,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"9KE6+y1zqvIBxEjsq8nk2VNj+0U=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","loading","setLoading","error","setError","fetchCart","data","get","headers","Authorization","localStorage","getItem","err","updateCartItem","productId","quantity","post","prev","map","item","product","_id","removeFromCart","filter","clearError","cartTotal","reduce","total","price","toFixed","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["E:/10000/10002/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const fetchCart = async () => {\r\n    try {\r\n      const { data } = await axios.get(\"/api/cart\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      setCart(data);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch cart\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCart();\r\n  }, []);\r\n\r\n  const updateCartItem = async (productId, quantity) => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/cart/update\",\r\n        { productId, quantity },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      setCart((prev) =>\r\n        prev.map((item) =>\r\n          item.product._id === productId ? { ...item, quantity } : item\r\n        )\r\n      );\r\n    } catch {\r\n      setError(\"Failed to update quantity\");\r\n    }\r\n  };\r\n\r\n  const removeFromCart = async (productId) => {\r\n    try {\r\n      await axios.post(\r\n        \"/api/cart/remove\",\r\n        { productId },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      setCart((prev) => prev.filter((item) => item.product._id !== productId));\r\n    } catch {\r\n      setError(\"Failed to remove item\");\r\n    }\r\n  };\r\n\r\n  const clearError = () => setError(\"\");\r\n\r\n  const cartTotal = cart\r\n    .reduce((total, item) => total + item.product.price * item.quantity, 0)\r\n    .toFixed(2);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        cartTotal,\r\n        loading,\r\n        error,\r\n        removeFromCart,\r\n        updateCartItem,\r\n        clearError,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}